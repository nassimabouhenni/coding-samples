<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='weather' inline='true' name='federated.1ij940z17mb35n15rcnct1fhs5az' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='weather' name='textscan.0o7hh510k1jf841264rin0gyn5ly'>
            <connection class='textscan' directory='C:/Users/nassi/Downloads/weather.csv~' filename='weather.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0o7hh510k1jf841264rin0gyn5ly' name='weather.csv' table='[weather#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='station' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='longitude' ordinal='3' />
            <column datatype='real' name='elevation' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='real' name='TMIN' ordinal='6' />
            <column datatype='real' name='TMAX' ordinal='7' />
            <column datatype='real' name='TAVG' ordinal='8' />
            <column datatype='real' name='AWND' ordinal='9' />
            <column datatype='integer' name='WDF5' ordinal='10' />
            <column datatype='real' name='WSF5' ordinal='11' />
            <column datatype='real' name='SNOW' ordinal='12' />
            <column datatype='real' name='SNWD' ordinal='13' />
            <column datatype='real' name='PRCP' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0o7hh510k1jf841264rin0gyn5ly' name='weather.csv' table='[weather#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='station' ordinal='0' />
            <column datatype='string' name='state' ordinal='1' />
            <column datatype='real' name='latitude' ordinal='2' />
            <column datatype='real' name='longitude' ordinal='3' />
            <column datatype='real' name='elevation' ordinal='4' />
            <column datatype='date' name='date' ordinal='5' />
            <column datatype='real' name='TMIN' ordinal='6' />
            <column datatype='real' name='TMAX' ordinal='7' />
            <column datatype='real' name='TAVG' ordinal='8' />
            <column datatype='real' name='AWND' ordinal='9' />
            <column datatype='integer' name='WDF5' ordinal='10' />
            <column datatype='real' name='WSF5' ordinal='11' />
            <column datatype='real' name='SNOW' ordinal='12' />
            <column datatype='real' name='SNWD' ordinal='13' />
            <column datatype='real' name='PRCP' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[elevation]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>elevation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TMIN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TMIN]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>TMIN</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TMAX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TMAX]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>TMAX</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TAVG</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TAVG]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>TAVG</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AWND</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AWND]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>AWND</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WDF5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[WDF5]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>WDF5</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WSF5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WSF5]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>WSF5</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNOW</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNOW]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>SNOW</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNWD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SNWD]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>SNWD</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRCP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PRCP]</local-name>
            <parent-name>[weather.csv]</parent-name>
            <remote-alias>PRCP</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather.csv_1A83BC3737F24E1A8CF804666B26867F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Awnd' datatype='real' name='[AWND]' role='measure' type='quantitative' />
      <column caption='Prcp' datatype='real' name='[PRCP]' role='measure' type='quantitative' />
      <column caption='Snow' datatype='real' name='[SNOW]' role='measure' type='quantitative' />
      <column caption='Snwd' datatype='real' name='[SNWD]' role='measure' type='quantitative' />
      <column caption='Tavg' datatype='real' name='[TAVG]' role='measure' type='quantitative' />
      <column caption='Tmax' datatype='real' name='[TMAX]' role='measure' type='quantitative' />
      <column caption='Tmin' datatype='real' name='[TMIN]' role='measure' type='quantitative' />
      <column caption='Wdf5' datatype='integer' name='[WDF5]' role='measure' type='quantitative' />
      <column caption='Wsf5' datatype='real' name='[WSF5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='weather.csv' datatype='table' name='[__tableau_internal_object_id__].[weather.csv_1A83BC3737F24E1A8CF804666B26867F]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Elevation' datatype='real' name='[elevation]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
      <column-instance column='[SNOW]' derivation='Avg' name='[avg:SNOW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[TAVG]' derivation='Avg' name='[avg:TAVG:qk]' pivot='key' type='quantitative' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:state:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MP&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ME&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ON&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;VI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;QC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;WV&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{73d71194-ff92-450a-ad80-25c5652270e7}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:SNOW:qk]' />
            <field name='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TAVG:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='weather.csv' id='weather.csv_1A83BC3737F24E1A8CF804666B26867F'>
            <properties context=''>
              <relation connection='textscan.0o7hh510k1jf841264rin0gyn5ly' name='weather.csv' table='[weather#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='station' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='real' name='latitude' ordinal='2' />
                  <column datatype='real' name='longitude' ordinal='3' />
                  <column datatype='real' name='elevation' ordinal='4' />
                  <column datatype='date' name='date' ordinal='5' />
                  <column datatype='real' name='TMIN' ordinal='6' />
                  <column datatype='real' name='TMAX' ordinal='7' />
                  <column datatype='real' name='TAVG' ordinal='8' />
                  <column datatype='real' name='AWND' ordinal='9' />
                  <column datatype='integer' name='WDF5' ordinal='10' />
                  <column datatype='real' name='WSF5' ordinal='11' />
                  <column datatype='real' name='SNOW' ordinal='12' />
                  <column datatype='real' name='SNWD' ordinal='13' />
                  <column datatype='real' name='PRCP' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Elevation + Weather Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='weather' name='federated.1ij940z17mb35n15rcnct1fhs5az' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ij940z17mb35n15rcnct1fhs5az'>
            <column-instance column='[elevation]' derivation='Avg' name='[avg:elevation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Elevation' datatype='real' name='[elevation]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:longitude:qk]' field-type='quantitative' max='34903664.250524051' min='26009762.278917249' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:latitude:qk]' field-type='quantitative' max='8924464.3940492272' min='-3255284.1205998501' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <lod column='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:station:nk]' />
              <color column='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:elevation:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:latitude:qk]</rows>
        <cols>[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:longitude:qk]</cols>
      </table>
      <simple-id uuid='{3570FF94-3B82-41D6-B701-42F7BA6F537E}' />
    </worksheet>
    <worksheet name='Snow + Regions'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map of Snow Fall, Temperature across the United States</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather' name='federated.1ij940z17mb35n15rcnct1fhs5az' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ij940z17mb35n15rcnct1fhs5az'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{73d71194-ff92-450a-ad80-25c5652270e7}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Snow' datatype='real' name='[SNOW]' role='measure' type='quantitative' />
            <column caption='Tavg' datatype='real' name='[TAVG]' role='measure' type='quantitative' />
            <column-instance column='[SNOW]' derivation='Avg' name='[avg:SNOW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TAVG]' derivation='Avg' name='[avg:TAVG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;GU&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;MP&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;PR&quot;' />
                <groupfilter function='member' level='[none:state:nk]' member='&quot;VI&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ij940z17mb35n15rcnct1fhs5az].[Longitude (generated)]' field-type='quantitative' max='31579379.025707375' min='25806163.312010635' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ij940z17mb35n15rcnct1fhs5az].[Latitude (generated)]' field-type='quantitative' max='7698004.6898075463' min='-2945914.4387074411' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]' />
              <size column='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:SNOW:qk]' />
              <color column='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:AdhocCluster:1:ok]' />
              <lod column='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TAVG:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ij940z17mb35n15rcnct1fhs5az].[Latitude (generated)]</rows>
        <cols>[federated.1ij940z17mb35n15rcnct1fhs5az].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{ACEF6D2E-8886-4690-B223-D674851812D5}' />
    </worksheet>
    <worksheet name='Temp Var'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Temperature Variation by Average Temperature across North America
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='weather' name='federated.1ij940z17mb35n15rcnct1fhs5az' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ij940z17mb35n15rcnct1fhs5az'>
            <column caption='Tavg' datatype='real' name='[TAVG]' role='measure' type='quantitative' />
            <column caption='Tmax' datatype='real' name='[TMAX]' role='measure' type='quantitative' />
            <column caption='Tmin' datatype='real' name='[TMIN]' role='measure' type='quantitative' />
            <column-instance column='[TAVG]' derivation='Avg' name='[avg:TAVG:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TMAX]' derivation='Avg' name='[avg:TMAX:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TMIN]' derivation='Avg' name='[avg:TMIN:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMAX:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMAX:qk]' z-order='1' />
            <reference-line axis-column='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMIN:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMIN:qk]' z-order='2' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMAX:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMIN:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMAX:qk] + [federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMIN:qk])</rows>
        <cols>[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TAVG:qk]</cols>
      </table>
      <simple-id uuid='{4A3FFD0E-DE4C-4728-B350-271B8093BE7E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Snow + Regions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:SNOW:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:PRCP:qk]</field>
            <field>[federated.1ij940z17mb35n15rcnct1fhs5az].[avg:TMAX:qk]</field>
            <field>[federated.1ij940z17mb35n15rcnct1fhs5az].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B0772B6-1AFE-4D8E-A294-837FAE06BD98}' />
    </window>
    <window class='worksheet' name='Temp Var'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ij940z17mb35n15rcnct1fhs5az].[none:state:nk]</field>
            <field>[federated.1ij940z17mb35n15rcnct1fhs5az].[none:station:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{672D01F3-1CC7-4545-BC8D-4BA41C2EAE01}' />
    </window>
    <window class='worksheet' name='Elevation + Weather Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ij940z17mb35n15rcnct1fhs5az].[none:station:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38DCAC9D-DAEA-46ED-808E-CFAC8D46EE52}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Elevation + Weather Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Snow + Regions' width='192'>
      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
      /WWtOj8P/P+8BQRqQ2RelwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Temp Var' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
